---
############-----cut here-----############
- name: Authentificate all nodes
  shell: "pcs cluster auth {{ pcm1_name }} {{ pcm2_name }} {{ pcm3_name }} -u hacluster -p {{ hcluster_password }} --force"
  when: ansible_host == postfix01_ip

- name: Check for replay 1 (/opt/pcs_config_done exists)
  stat:
    path: /opt/pcs_config_done
  register: pcs_config_done
  when: ansible_host == postfix01_ip

- name: Create cluster
  shell: "{{ item }}"
  with_items:
   - "pcs cluster setup --force --name CLUSTER {{ pcm1_name }} {{ pcm2_name }} {{ pcm3_name }}"
   - "pcs cluster enable --all"
   - "pcs cluster start --all"
  when:
    - ansible_host == postfix01_ip
    - pcs_config_done.stat.exists != true

- name: Set replay protection (/opt/pcs_config_done)
  file:
    path: /opt/pcs_config_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - ansible_host == postfix01_ip
    - pcs_config_done.stat.exists != True
  
- name: Start services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - corosync
    - pacemaker

- name: Wait a little
  pause:
    seconds: 10

- name: Check for replay 2 (/opt/pcs_config2_done exists)
  stat:
    path: /opt/pcs_config2_done
  register: pcs_config2_done

- name: Add drbd resource DrbdData
  shell: "{{ item }}"
  with_items:
    - "pcs cluster cib cfg"
    - "pcs -f cfg resource create DrbdData ocf:linbit:drbd drbd_resource={{ resource_drbd_name }} op monitor interval=5s"
    - "pcs -f cfg resource master DrbdDataClone DrbdData master-max=1 master-node-max=1 clone-max=3 clone-node-max=1 notify=true"
    - "pcs -f cfg resource create DrbdFS Filesystem device=\"/dev/drbd0\" directory={{ postfix_drbd_mountpoint }} fstype=\"xfs\""
    - "pcs -f cfg constraint colocation add DrbdFS with DrbdDataClone INFINITY with-rsc-role=Master"
    - "pcs -f cfg constraint order promote DrbdDataClone then start DrbdFS"
    - "pcs -f cfg resource create virtual_ip ocf:heartbeat:IPaddr2 ip={{ postfix_mail_ip }} cidr_netmask=24 op monitor interval=5s"
    - "pcs -f cfg resource create proxysql_ip ocf:heartbeat:IPaddr2 ip={{ proxysql01_ip }} cidr_netmask=24 op monitor interval=5s"
    - "pcs -f cfg resource create postfix ocf:heartbeat:postfix op monitor interval=5s timeout=15s"
    - "pcs -f cfg resource create dovecot systemd:dovecot op monitor interval=5s timeout=15s"
    - "pcs -f cfg resource create proxysql systemd:proxysql op monitor interval=5s timeout=15s"
    - "pcs -f cfg constraint colocation add virtual_ip with DrbdFS INFINITY"
    - "pcs -f cfg constraint colocation add proxysql_ip with DrbdFS INFINITY"
    - "pcs -f cfg constraint colocation add postfix with virtual_ip INFINITY"
    - "pcs -f cfg constraint colocation add dovecot with virtual_ip INFINITY"
    - "pcs -f cfg constraint colocation add proxysql with proxysql_ip INFINITY"
    - "pcs -f cfg constraint order DrbdFS then virtual_ip"
    - "pcs -f cfg constraint order DrbdFS then proxysql_ip"
    - "pcs -f cfg constraint order virtual_ip then postfix"
    - "pcs -f cfg constraint order virtual_ip then dovecot"
    - "pcs -f cfg constraint order proxysql_ip then proxysql"
    - "pcs cluster cib-push cfg"
  when:
    - ansible_host == postfix01_ip
    - pcs_config2_done.stat.exists != True

- name: Set replay protection 2 (/opt/pcs_config2_done)
  file:
    path: /opt/pcs_config2_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - ansible_host == postfix01_ip
    - pcs_config2_done.stat.exists != True

- name: Wait a little
  pause:
    seconds: 10

- name: Check for replay (/opt/pcs_fence_config_done exists)
  stat:
    path: /opt/pcs_fence_config_done
  register: pcs_fence_config_done

- name: Configure fencing on Virtualbox
  shell: "{{ item }}"
  with_items:
    - "pcs stonith create pcm1_fence_dev fence_vbox ipaddr=\"{{ virtualbox_host }}\" login=\"{{ virtualbox_host_username }}\" passwd=\"{{ virtualbox_host_password }}\" power_wait=\"10\" secure=\"1\" port=\"postfix01\" pcmk_host_list=\"pcm1\""
    - "pcs stonith create pcm2_fence_dev fence_vbox ipaddr=\"{{ virtualbox_host }}\" login=\"{{ virtualbox_host_username }}\" passwd=\"{{ virtualbox_host_password }}\" power_wait=\"10\" secure=\"1\" port=\"postfix02\" pcmk_host_list=\"pcm2\""
    - "pcs stonith create pcm3_fence_dev fence_vbox ipaddr=\"{{ virtualbox_host }}\" login=\"{{ virtualbox_host_username }}\" passwd=\"{{ virtualbox_host_password }}\" power_wait=\"10\" secure=\"1\" port=\"postfix03\" pcmk_host_list=\"pcm3\""
    - "pcs constraint location pcm1_fence_dev avoids pcm1"
    - "pcs constraint location pcm2_fence_dev avoids pcm2"
    - "pcs constraint location pcm3_fence_dev avoids pcm3"
  when: (pcs_fence_config_done.stat.exists != True) and (ansible_host == postfix01_ip)
#  no_log: true

- name: Set replay protection (/opt/pcs_fence_config_done)
  file:
    path: /opt/pcs_fence_config_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - pcs_fence_config_done.stat.exists != True
    - ansible_host == postfix01_ip
